rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check file size (in MB)
    function isValidSize(maxSizeMB) {
      return request.resource.size < maxSizeMB * 1024 * 1024;
    }
    
    // Helper function to check if file is an image
    function isImage() {
      return request.resource.contentType.matches('image/.*');
    }
    
    // Profile pictures: Users can only write their own, anyone authenticated can read
    // Path: /profile_pictures/{fileName} (e.g., userId.jpg)
    // Max size: 5MB
    // Note: fileName will be "userId.jpg", we verify it starts with the authenticated user's ID
    match /profile_pictures/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() 
                   && fileName.matches(request.auth.uid + '\\..+')
                   && isValidSize(5)
                   && isImage();
    }
    
    // Message images: Any authenticated user can upload, all can read
    // Path: /images/{conversationId}/{fileName} (e.g., messageId.jpg)
    // Max size: 10MB
    match /images/{conversationId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated()
                   && isValidSize(10)
                   && isImage();
    }
  }
}

